<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zxGWxlHAmVUAAAAASUVORK5CYII=
</value>
  </data>
</root>